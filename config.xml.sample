<?xml version="1.0" encoding="ISO-8859-1"?>
<smtp_config>
  <!-- The port the server will listen on. 1024 and below will require root. -->
  <port>2601</port>
  <!-- Logging level can be set to debug, info or error -->
  <logging_level>info</logging_level>
  <!--
  Logging mode can either be set to one of three defaults or a path to a log.properties file or a log.xml file. The
  defaults are file to log to logs/dmda.log, console to log to std out or none to disable logging. For guidance on
  setting up logs using a .properties file see log.properties.sample. This file is used by the log4j configurator so
  further guidance can be found in their documentation.
  -->
  <logging_mode>console</logging_mode>
  <!-- The generic message that is used when an email is rejected -->
  <email_rejection_message>An unexpected error has occurred and your email has not been received. Please try again later.</email_rejection_message>
  <!-- The max size the message body can be in megabytes -->
  <message_size_limit_mb>15</message_size_limit_mb>
  <!-- AV can be disabled by setting the mode to 'none' -->
  <anti_virus>
    <mode>clamd</mode>
    <server>clamd_server</server>
    <port>3310</port>
    <timeout_ms>300000</timeout_ms>
  </anti_virus>
  <!-- The list of databases. Databases have a many to 1 relationship with recipients. -->
  <database_list>
    <database>
      <name>database_name</name>
      <!-- This is the same URL that clobber uses -->
      <jdbc_url>jdbc:oracle:thin:@database_host:1521:service_name</jdbc_url>
      <username>user</username>
      <password>password</password>
      <!--
      This is the query the database will use to store the email in the database. The bind params are "mail_id"
      , "repository", "from_address", "recipient", "remote_hostname", "remote_address", "message_body", "subject"
	  , "sent_date" and "header_xml_clob"
      -->
      <store_query>
INSERT INTO inbox(
  message_name
, repository_name
, message_state
, sender
, recipients
, remote_host
, remote_addr
, message_body
, last_updated
, message_subject
) VALUES (
  :mail_id
, :repository
, 'root'
, :from_address
, :recipient
, :remote_hostname
, :remote_address
, :message_body
, sysdate
, :subject
)
      </store_query>
      <!-- This query is used to store the attachments that have been stripped from the email individually.  -->
      <attachment_store_query>
INSERT INTO jamesmgr.attachments(
  message_name
, content_type
, content_disposition
, file_name
, data
, text_data
, datetime
) VALUES (
  :mail_id
, :content_type
, :content_disposition
, :file_name
, :content_data
, :text_content
, sysdate
)
      </attachment_store_query>
    </database>
  </database_list>
  <!-- The recipient list has a many to 1 relationship with the databases above. -->
  <recipient_list>
    <recipient>
      <!--
      this is the domain part of an email address user@domain and any email sent to this domain will be stored as
      defined by the store query of that database
      -->
      <domain>localhost</domain>
      <database>database_name</database>
    </recipient>
    <recipient>
      <!--
      here the domain will be matched using a regular expression. Recipient domains will be matched against recipients
      in the order they are defined here. The first match will be used.
      -->
      <regex_domain>.*\..*\.co.uk</regex_domain>
      <database>database_name</database>
    </recipient>
  </recipient_list>
</smtp_config>
